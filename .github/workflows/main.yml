name: 🔁 Unzip, Process, and Summarize

on:
  workflow_dispatch:
  push:
    paths:
      - "config.yml"
      - "unzip-config.yml"

jobs:
  process:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4

      - name: 🕒 Get timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: 🧩 Ensure config files
        run: |
          if [ ! -f config.yml ]; then
            echo "folders:" > config.yml
            echo "  - '**/*.json'" >> config.yml
          fi
          if [ ! -f unzip-config.yml ]; then
            echo "unzip:" > unzip-config.yml
            echo "  - 'Fathoms.zip'" >> unzip-config.yml
          fi

      - name: 🧳 Unzip all ZIPs
        run: |
          mkdir -p extracted_assets
          yq eval '.unzip[]' unzip-config.yml | while read zipfile; do
            if [ -f "$zipfile" ]; then
              unzip -q "$zipfile" -d extracted_assets/
              echo "✅ Unzipped $zipfile"
            else
              echo "⚠️  Zip not found: $zipfile"
            fi
          done

      - name: 🧠 Process Files
        run: |
          mkdir -p generated
          TIMESTAMP="${{ steps.timestamp.outputs.TIMESTAMP }}"

          echo "" > data.txt
          ALL_FILES=$(find extracted_assets -type f)

          for file in $ALL_FILES; do
            rel_path="${file#extracted_assets/}"
            content=$(cat "$file")
            echo "===== $rel_path =====" >> data.txt
            echo "$content" >> data.txt
            echo "" >> data.txt
          done

          echo "✅ Combined data.txt created with $(echo "$ALL_FILES" | wc -l) files"

          GENERATED=0
          for pattern in $(yq eval '.folders[]' config.yml); do
            MATCHED=$(find extracted_assets -type f -path "extracted_assets/$pattern")
            for file in $MATCHED; do
              rel_path="${file#extracted_assets/}"
              safe_name=$(echo "$rel_path" | tr '/ ' '꞉🝗')
              out_file="generated/${safe_name}_${TIMESTAMP}.txt"
              echo "🔖 $rel_path" > "$out_file"
              cat "$file" >> "$out_file"
              GENERATED=$((GENERATED+1))
            done
          done

          echo "Generated $GENERATED summary files"
          echo "changes=$GENERATED" >> $GITHUB_OUTPUT

      - name: 💾 Commit & push
        if: success()
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add data.txt generated/
          git diff --cached --quiet || git commit -m "🔄 Auto update summaries ${{ steps.timestamp.outputs.TIMESTAMP }}"
          git push

      - name: 🚀 Open PR (only from main branch)
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "🔄 Auto update summaries ${{ steps.timestamp.outputs.TIMESTAMP }}"
          branch: auto/summaries-${{ steps.timestamp.outputs.TIMESTAMP }}
          title: "🔄 Summary update - ${{ steps.timestamp.outputs.TIMESTAMP }}"
          body: "Automated summary files generated from extracted content."
