name: Unzip and Aggregate Files
on:
  workflow_dispatch:        # manual trigger (Run workflow button):contentReference[oaicite:3]{index=3}

jobs:
  unzip_and_aggregate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0          # get full history for accurate diff:contentReference[oaicite:4]{index=4}
          persist-credentials: true  # allow pushing via GITHUB_TOKEN:contentReference[oaicite:5]{index=5}

      - name: Set up Python for YAML parsing
        uses: actions/setup-python@v4

      - name: Read config.yml and process ZIPs
        run: |
          pip install PyYAML

          # Read the list of ZIP files from config.yml
          files=$(python - <<'EOF'
import yaml
config = yaml.safe_load(open('config.yml'))
for z in config.get('unzip', []):
    print(z)
EOF
          )
          # Split into array, one entry per line
          IFS=$'\n' read -r -d '' -a zips <<< "$files"
          
          # Prepare/clear the data.txt output
          echo "" > data.txt

          # Loop over each ZIP file
          for zipfile in "${zips[@]}"; do
            # Compute base folder name (remove .zip, safely handle spaces)
            base=$(basename "$zipfile" .zip)
            # Remove any previous extraction and recreate the folder
            rm -rf "$base"
            mkdir -p "$base"
            # Unzip into the folder (quiet mode); quotes handle special characters
            unzip -q "$zipfile" -d "$base"

            # Append each fileâ€™s path and contents to data.txt
            # (find handles spaces with IFS= read -r)
            find "$base" -type f -print0 | while IFS= read -r -d '' file; do
              echo "===== File: $file =====" >> data.txt
              cat "$file" >> data.txt
              echo "" >> data.txt
            done
          done

          # Configure git for committing
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage changes (data.txt and any new/extracted folders)
          git add .
          
          # If there are changes, commit and push
          if ! git diff --cached --quiet; then
            git commit -m "Update data.txt and unzipped contents"
            git push
          else
            echo "No changes to commit."
          fi
